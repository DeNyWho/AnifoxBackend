name: deploy

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

env:
  GITHUB_TOKEN: ${{ secrets.SSH_TOKEN }}
  SSHK: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.SSH_TOKEN }}
          submodules: 'true'

      - name: Set up SSH
        run: |
          mkdir -p $HOME/.ssh
          echo "$SSHK" > $HOME/.ssh/id_rsa
          chmod 600 $HOME/.ssh/id_rsa
          ssh-keyscan github.com >> $HOME/.ssh/known_hosts
          git submodule update --init --recursive
        env:
          SSHK: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Gradlew Build
        run: ./gradlew clean build -x test

      - name: Build Docker image
        run: docker build --build-arg JAR_FILE=build/libs/*.jar -t app .

      - name: Save Docker image as tar
        run: docker save -o app.tar app

      - name: Transfer backend files to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./app.tar
          target: /home/project/backend

      - name: SSH into remote server and run Docker container
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/project/backend
            docker container stop backend
            docker container rm backend
            docker rmi app
            docker load -i app.tar
            docker run -d -p 12200:12200 --env-file env.txt --log-opt max-size=50m --name backend app
            cd /home/project/parser
            docker container stop parser
            docker container rm parser
            docker run -d -p 12900:12900 --env-file env.txt --log-opt max-size=50m --name parser app
